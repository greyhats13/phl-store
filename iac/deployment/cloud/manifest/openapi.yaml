openapi: 3.0.1
info:
  title: PHL Product API
  description: API for managing products in the PHL system.
  version: "1.0.0"
servers:
  - url: https://api.phl.blast.co.id
    description: Production Server
paths:
  /products:
    post:
      summary: Create a new product
      operationId: createProduct
      tags:
        - Products
      security:
        - bearerAuth: []
      requestBody:
        description: Product object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProduct'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        httpMethod: POST
        uri: ${alb_listener_arn}
        connectionType: VPC_LINK
        connectionId: ${vpc_link_id}
        payloadFormatVersion: "1.0"
        timeoutInMillis: 29000
    get:
      summary: List all products
      operationId: listProducts
      tags:
        - Products
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        httpMethod: GET
        uri: ${alb_listener_arn}
        connectionType: VPC_LINK
        connectionId: ${vpc_link_id}
        payloadFormatVersion: "1.0"
        timeoutInMillis: 29000
  /products/{id}:
    get:
      summary: Get a product by ID
      operationId: getProduct
      tags:
        - Products
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the product to retrieve
          required: true
          schema:
            type: integer
            example: 24
      responses:
        '200':
          description: Product retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        httpMethod: GET
        uri: ${alb_listener_arn}
        connectionType: VPC_LINK
        connectionId: ${vpc_link_id}
        payloadFormatVersion: "1.0"
        timeoutInMillis: 29000
    put:
      summary: Update a product by ID
      operationId: updateProduct
      tags:
        - Products
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the product to update
          required: true
          schema:
            type: integer
            example: 24
      requestBody:
        description: Product object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProduct'
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        httpMethod: PUT
        uri: ${alb_listener_arn}
        connectionType: VPC_LINK
        connectionId: ${vpc_link_id}
        payloadFormatVersion: "1.0"
        timeoutInMillis: 29000
    delete:
      summary: Delete a product by ID
      operationId: deleteProduct
      tags:
        - Products
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the product to delete
          required: true
          schema:
            type: integer
            example: 25
      responses:
        '204':
          description: Product deleted successfully
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        httpMethod: DELETE
        uri: ${alb_listener_arn}
        connectionType: VPC_LINK
        connectionId: ${vpc_link_id}
        payloadFormatVersion: "1.0"
        timeoutInMillis: 29000
  /oauth2/token:
    post:
      summary: Generate OAuth 2.0 token
      operationId: generateToken
      tags:
        - Authentication
      requestBody:
        description: OAuth 2.0 client credentials
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  example: client_credentials
                client_id:
                  type: string
                  example: 3tkr18mpnmi6iucbpevcuvo59q
                client_secret:
                  type: string
                  example: 2gc7ehpn15kt1ku8msrbtlvjas9nm9hgri0d346aa9ckefk48ni
      responses:
        '200':
          description: Token generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
      x-amazon-apigateway-integration:
        type: HTTP_PROXY
        httpMethod: POST
        uri: arn:aws:apigateway:{region}:execute-api:{region}:/oauth2/token
        connectionType: INTERNET
        payloadFormatVersion: "1.0"
        timeoutInMillis: 29000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          example: 25
        name:
          type: string
          example: "Nasi"
        price:
          type: number
          format: float
          example: 35.00
        description:
          type: string
          example: "Nasi kuning"
      required:
        - id
        - name
        - price
        - description
    NewProduct:
      type: object
      properties:
        name:
          type: string
          example: "Nasi"
        description:
          type: string
          example: "Nasi kuning"
        price:
          type: number
          format: float
          example: 35.00
      required:
        - name
        - price
    UpdateProduct:
      type: object
      properties:
        name:
          type: string
          example: "Jagung Bakar"
        price:
          type: number
          format: float
          example: 40.00
      required:
        - name
        - price
    TokenResponse:
      type: object
      properties:
        access_token:
          type: string
          example: "eyJraWQiOiJwV0g5dWd5eUNuaE1XVlwvYTAwVXk2S2lPam13dXJNM1RPck5YaGJ6SmRtaz0iLCJhbGciOiJSUzI1NiJ9..."
        expires_in:
          type: integer
          example: 3600
        token_type:
          type: string
          example: "Bearer"
      required:
        - access_token
        - expires_in
        - token_type
  responses:
    Unauthorized:
      description: Unauthorized access
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Unauthorized"
tags:
  - name: Products
    description: Operations related to products
  - name: Authentication
    description: OAuth 2.0 token generation
x-amazon-apigateway-cors:
  allowOrigins:
    - "*"
  allowMethods:
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
  allowHeaders:
    - Content-Type
    - Authorization
    - X-Api-Key
    - X-Amz-Date
    - X-Amz-Security-Token
    - X-Amz-User-Agent
  exposeHeaders:
    - Content-Length
    - Date
  maxAge: 86400
  allowCredentials: false
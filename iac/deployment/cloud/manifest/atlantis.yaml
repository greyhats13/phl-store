orgAllowlist: github.com/greyhats13/*

environment:
  GITHUB_OWNER: ${extra_vars.github_user}

environmentSecrets:
  - name: GITHUB_TOKEN
    secretKeyRef:
      name: ${unit}-${env}-${code}-${feature}-webhook
      key: github_token

github:
  user: ${extra_vars.github_user}

repoConfig: |
 ---
 repos:
 - id: /.*/
   branch: /.*/
   repo_config_file: iac/atlantis.yaml
   plan_requirements: []
   apply_requirements: []
   workflow: default
   allowed_overrides: [apply_requirements, plan_requirements]
   allow_custom_workflows: false
 workflows:
   default:
     plan:
       steps: [init, plan]
     apply:
       steps: [apply]
serviceAccount:
  name: ${feature}-sa

service:
  type: ClusterIP
  port: 80
  targetPort: 4141

ingress:
  enabled: ${extra_vars.ingress_enabled}
  ingressClassName: ${extra_vars.ingress_class_name}
  annotations:
    external-dns.alpha.kubernetes.io/hostname: ${feature}.${dns_name}
    external-dns.alpha.kubernetes.io/ttl: '300'
    alb.ingress.kubernetes.io/group.name: ${extra_vars.alb_group_name}
    alb.ingress.kubernetes.io/certificate-arn: ${extra_vars.alb_certificate_arn}
    alb.ingress.kubernetes.io/ssl-policy: ${extra_vars.alb_ssl_policy}
    alb.ingress.kubernetes.io/backend-protocol: ${extra_vars.alb_backend_protocol}
    alb.ingress.kubernetes.io/listen-ports: '${extra_vars.alb_listen_ports}'
    alb.ingress.kubernetes.io/scheme: ${extra_vars.alb_scheme}
    alb.ingress.kubernetes.io/target-type: ${extra_vars.alb_target_type}
    alb.ingress.kubernetes.io/group.order: '${extra_vars.alb_group_order}'
    alb.ingress.kubernetes.io/healthcheck-path: ${extra_vars.alb_healthcheck_path}
    alb.ingress.kubernetes.io/ssl-redirect: '${extra_vars.alb_ssl_redirect}'
  host: ${feature}.${dns_name}
  tls:
    - hosts:
        - ${feature}.${dns_name}

volumeClaim:
  storageClassName: gp3
